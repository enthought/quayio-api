/*
 * Quay Frontend
 *
 * This API allows you to perform many of the operations required to work with Quay repositories, users, and organizations. You can find out more at <a href=\"https://quay.io\">Quay</a>.
 *
 * API version: v1
 * Contact: support@quay.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ChangeRepoTrust Change the trust settings for the repository.
type ChangeRepoTrust struct {
	// Whether or not signing is enabled for the repository.
	TrustEnabled bool `json:"trust_enabled"`
}

// NewChangeRepoTrust instantiates a new ChangeRepoTrust object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeRepoTrust(trustEnabled bool) *ChangeRepoTrust {
	this := ChangeRepoTrust{}
	this.TrustEnabled = trustEnabled
	return &this
}

// NewChangeRepoTrustWithDefaults instantiates a new ChangeRepoTrust object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeRepoTrustWithDefaults() *ChangeRepoTrust {
	this := ChangeRepoTrust{}
	return &this
}

// GetTrustEnabled returns the TrustEnabled field value
func (o *ChangeRepoTrust) GetTrustEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TrustEnabled
}

// GetTrustEnabledOk returns a tuple with the TrustEnabled field value
// and a boolean to check if the value has been set.
func (o *ChangeRepoTrust) GetTrustEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrustEnabled, true
}

// SetTrustEnabled sets field value
func (o *ChangeRepoTrust) SetTrustEnabled(v bool) {
	o.TrustEnabled = v
}

func (o ChangeRepoTrust) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["trust_enabled"] = o.TrustEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableChangeRepoTrust struct {
	value *ChangeRepoTrust
	isSet bool
}

func (v NullableChangeRepoTrust) Get() *ChangeRepoTrust {
	return v.value
}

func (v *NullableChangeRepoTrust) Set(val *ChangeRepoTrust) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeRepoTrust) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeRepoTrust) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeRepoTrust(val *ChangeRepoTrust) *NullableChangeRepoTrust {
	return &NullableChangeRepoTrust{value: val, isSet: true}
}

func (v NullableChangeRepoTrust) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeRepoTrust) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
